// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restoran;

namespace Restoran.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180917063610_RenameDatabase")]
    partial class RenameDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Restoran.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact");

                    b.Property<string>("Name");

                    b.Property<int>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Clients");

                    b.HasData(
                        new { Id = 1, Contact = "+754 45 225 12", Name = "Васья Пупкин", OrderId = 1 }
                    );
                });

            modelBuilder.Entity("Restoran.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new { Id = 1, Description = "В руках шеф-повара Пьера Ганьера меренги пережили второе рождение. Чтобы сделать белок воздушным, он добавляет в него воду и сахар (первым это придумал мастер молекулярной кухни Эрве Тис) —  и делает из него кристаллы.", Name = "Кристалл ветра", Price = 125.0 },
                        new { Id = 2, Description = "В Alinea Грант Ахатц (лучший молодой шеф-повар 2002 года по версии F&W) подает на отдельных пьедесталах пять кусочков пальмы с пятью разными начинками — от ванильного пудинга до пюре из трюфеля и ржаного хлеба.", Name = "Пальмовая сердцевина", Price = 253.0 },
                        new { Id = 3, Description = "В Momofuku за обеденным столом-прилавком на 12 персон, придуманным Дэвидом Чангом (лучший молодой шеф 2006 года по версии F&W), можно попробовать невероятно нежный реберный край Питера Серпико, готовящийся 48 часов по вакуумной технологии Sous Vide.", Name = "Нежный реберный край с тушеным дайконом, маринованной морковью и семенами горчицы", Price = 532.0 },
                        new { Id = 4, Description = "Салат от Мишеля Браса. В зависимости от сезона он подбирает новые сочетания овощей, трав, цветов и семян — до 60 наименований.", Name = "Гаргуйу", Price = 400.0 },
                        new { Id = 5, Description = "В Bazaar Хосе Андреаса мидии маринуют в уксусе с ароматом душистого перца и подают в жестяной банке, отдавая должное традиционным испанским маринованным морепродуктам.", Name = "Мидии в маринаде", Price = 143.0 }
                    );
                });

            modelBuilder.Entity("Restoran.Models.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Institutions");

                    b.HasData(
                        new { Id = 1, Description = "Новое постоянное кафе The Hummus, специализирующееся на хумусе и фалафеле, откроется на фудкорте Даниловского рынка. В меню будут те же блюда, что и в их киоске в саду имени Баумана, например: фалафель в пите с соленьями, свежими овощами и хумусом; пита с курицей; пита с говяжьим кебабом; домашний фри с тхиной; сабих (сэндвич в пите с жареными баклажанами, варёным яйцом, овощами и тхиной); Jerusalem mix (обжаренное куриное филе с луком, грибами, специями, подающееся на тонкой лепёшке). Но добавят и новые позиции: шакшуку, супы, салаты и новые горячие блюда. Акцент собираются сделать на гриле — на нём будут готовить «мясо в иерусалимском стиле». Кроме еды, The Hummus на Даниловском будут продавать израильские, в том числе кошерные, продукты. ", Name = "The Hummus" },
                        new { Id = 2, Description = "Проект-участник «Городского маркета еды» «Любовь Пирогова» открывает своё первое постоянное кафе. Его основатели — супруги Вадим Курганов и Мунира Шерманова. В мае 2014 года они впервые стали участниками «Ресторанного дня», после чего решили открыть собственный бизнес. С тех пор Вадим и Мунира постоянно практиковались, участвуя в уличных маркетах еды, и посещали кулинарные курсы. Мунира закончила поварской и кондитерский курсы кулинарной школы Ragout, курс в «Школе Местной Еды» о том, как открыть свой ресторан и курсы HURMA Management. ", Name = "Кафе «Любовь Пирогова»" },
                        new { Id = 3, Description = "Кафе открывают Расул Паркуев, Камила Паркуева и Мурад Калаев, то есть команда, открывшая халяльное кафе Lucky на «Автозаводской», дагестанский ресторан «Жи есть» на Орджоникидзе и pop-up проект для уличных маркетов «Чуду».", Name = "Кафе «Дагестанская лавка»»" }
                    );
                });

            modelBuilder.Entity("Restoran.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DishId");

                    b.Property<int>("InstitutionId");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Orders");

                    b.HasData(
                        new { Id = 1, DishId = 1, InstitutionId = 1 },
                        new { Id = 2, DishId = 3, InstitutionId = 2 }
                    );
                });

            modelBuilder.Entity("Restoran.Models.Client", b =>
                {
                    b.HasOne("Restoran.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restoran.Models.Order", b =>
                {
                    b.HasOne("Restoran.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restoran.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
